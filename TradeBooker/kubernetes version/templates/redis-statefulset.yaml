apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: {{ .Release.Namespace }}
  labels:
    app: redis
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: redis-primary
  replicas: {{ .Values.redis.masterReplicas }}
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      imagePullSecrets: 
      - name: registry-trading-system-registry
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        command:
        - sh
        - -c
        - |
          if [ "$(hostname)" = "redis-0" ]; then
            exec redis-server --appendonly yes
          else
            exec redis-server --appendonly yes --replicaof redis-0.redis-primary.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local 6379
          fi
        volumeMounts:
        - name: redis-data
          mountPath: /data
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 3
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: {{ .Values.statefulSets.persistence.storageClass }}
      resources:
        requests:
          storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: redis-primary
  namespace: {{ .Release.Namespace }}
  labels:
    app: redis
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: